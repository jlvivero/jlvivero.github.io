<?xml version="1.0" encoding="utf-8" ?><rss version="2.0"><channel><title>JL's Bizzare Adventures</title><link>https://jlvivero.github.io/</link><description>My page to show off projects and blog</description><item><title>Learning to program with ADHD</title><link>https://jlvivero.github.io//post/2018/01/learning-to-program-with-adhd</link><guid>https://jlvivero.github.io//post/2018/01/learning-to-program-with-adhd</guid><pubDate>Sun, 14 Jan 2018 17:38:01 -0500</pubDate><description>&lt;p&gt;So a few days ago &lt;a href=&quot;https://twitter.com/HowtoADHD&quot;&gt;@HowtoADHD&lt;/a&gt; made a tweet about the best jobs for people with ADHD, and I elaborated on why Software developing is great for people like us. &lt;/p&gt;
&lt;p&gt;Now someone asked what&amp;#39;s a good advice on how to learn to program when you have ADHD. When I saw the tweet I got excited and was very happy to give the advice, but I realized that there was no way to put it into one tweet &lt;em&gt;(yes even with the new tweet length)&lt;/em&gt;. So I promised to make a separate post about it and here I am.&lt;/p&gt;
&lt;p&gt;So to give proper advice I want to give a little bit of background on how I learnt programming. If you&amp;#39;re not interested in my story you can skip this part, just scroll down.&lt;/p&gt;
&lt;h2 id=&quot;my-story&quot;&gt;My story&lt;/h2&gt;
&lt;p&gt;It all began when I decided to not study civil engineer (after 3 years, yeah...) and I decided to look for what I really enjoyed in life.&lt;br&gt;To be honest those were really hard times for me, I was going through a lot, but I had good people next to me that supported me.&lt;br&gt;I spent 6 months just looking for what I liked and finally came to the conclusion that I wanted to learn programming (I already knew the basics from highschool but in reality it was almost nothing).
So I took it upon myself to learn what I needed, and boy was it a mess, I had no idea what to learn or how. &lt;/p&gt;
&lt;p&gt;I had no idea where to start and knowing me, I knew I would just get overwhelmed and quit.&lt;br&gt;I started learning python by myself, but I could not get through with it alone. I decided I needed to go to college, I wasn&amp;#39;t too excited about it, but I knew that if I didn&amp;#39;t have the proper structure to learn I wouldn&amp;#39;t be able to succeed.&lt;/p&gt;
&lt;p&gt;I talked it over with my family and my girlfriend at the time and they supported me completely, so I started my new adventure in computer science, and the learning structure helped me a lot.&lt;br&gt;Then... not so much. After I learnt the basics of computer science, honestly, school became boring. It was more interesting to learn on my own. I knew enough to defend myself and I knew what I wanted to learn and in what order now, so things started becoming more natural to me.&lt;/p&gt;
&lt;p&gt;And after that point school wasn&amp;#39;t THAT interesting, but it doesn&amp;#39;t mean it was useless. In the end I do wish I had known about so many online resources like Udacity and such, or talked to someone that went through a similar experience as I did to help me compile a list of material (in a specific order) to learn on my own. Regardless school was a good substitute for that to be honest and I don&amp;#39;t regret it.&lt;/p&gt;
&lt;h2 id=&quot;actual-advice&quot;&gt;Actual Advice&lt;/h2&gt;
&lt;p&gt;Now, the most important actual advice I can give is, find structure. Let&amp;#39;s be honest, if you have ADHD like me, you know we &lt;strong&gt;SUCK&lt;/strong&gt; at prioritizing things correctly half the time and we will jump from thing to thing if we don&amp;#39;t have a previous structure to guide us. I know that if you don&amp;#39;t know anything about computer science things can be very overwhelming; but fear not, I have the solution.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s quite simple, I&amp;#39;ll take what school gave me and give you a list of topics you should research in order to learn, &lt;em&gt;yay&lt;/em&gt;. Now following the order or not is up to you, and you can do this in many different ways. My list/advice is just that, advice, it&amp;#39;ll help you find some structure in your learning and that&amp;#39;s what matters.&lt;/p&gt;
&lt;p&gt;All you have to do is stick to it, or stick to your alternative method, the point is stick to wtv you plan. &lt;em&gt;(it&amp;#39;s so hard I know there&amp;#39;s so many cool things out there)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now we&amp;#39;ll start with the basics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The basics of programming&lt;/strong&gt;. I recommend you learn this through Udacity, a great and &lt;strong&gt;Free&lt;/strong&gt; resource that has the very thing we talked about: &lt;em&gt;structure&lt;/em&gt; just log in and get right to it:&lt;br&gt;&lt;a href=&quot;https://classroom.udacity.com/courses/cs101&quot;&gt;https://classroom.udacity.com/courses/cs101&lt;/a&gt; In case the link doesn&amp;#39;t work the course is called intro to computer science, it teaches the basics of programming using python.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The google way&lt;/strong&gt;: this is a very good guide to development that google curated for anyone to use, it&amp;#39;s really good, and I actually used it myself for a bit. &lt;a href=&quot;https://techdevguide.withgoogle.com/paths/foundational/&quot;&gt;https://techdevguide.withgoogle.com/paths/foundational/&lt;/a&gt; By the time I used it I already knew most of these stuff so I kinda just used it for certain stuff like android developing. It&amp;#39;s still very good and a very nice alternative. This guide goes way further than the basics, so you can kinda just follow this along for almost your whole learning experience. (If you&amp;#39;re using this, use the recommended order, because that&amp;#39;s the point, make use of the structure given to you by google).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alright, let&amp;#39;s move on to the most important things you can learn about programming &lt;strong&gt;Data structures and algorithms&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is basically what programming is all about, and the best resource I can think of is &lt;a href=&quot;https://www.geeksforgeeks.org/data-structures/&quot;&gt;https://www.geeksforgeeks.org/data-structures/&lt;/a&gt; and &lt;a href=&quot;https://www.geeksforgeeks.org/fundamentals-of-algorithms/&quot;&gt;https://www.geeksforgeeks.org/fundamentals-of-algorithms/&lt;/a&gt;&lt;br&gt; Again make use of the structure, it&amp;#39;s in order, just follow the order.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alright we&amp;#39;re all set in terms of information for now right?, well it&amp;#39;s time for your first project. Whatever it is you want to make, do it, it&amp;#39;s fine, but keep it simple and follow a tutorial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;want to make a game? &lt;a href=&quot;https://www.youtube.com/watch?v=qwuPiaFU37w&quot;&gt;https://www.youtube.com/watch?v=qwuPiaFU37w&lt;/a&gt; learn unity and C# (or any game engine you want, just follow along)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;want to make a webpage? &lt;a href=&quot;https://blog.risingstack.com/your-first-node-js-http-server/&quot;&gt;https://blog.risingstack.com/your-first-node-js-http-server/&lt;/a&gt; build your first http server with nodejs, then start learning http/css javascript &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice how im being a little bit more free in what you learn and how to obtain the resources? It&amp;#39;s because you&amp;#39;re getting to the point where you are almost ready to be set free, you have the basics down and you are following along tutorials to make projects from scratch.&lt;/p&gt;
&lt;p&gt;Next you &lt;strong&gt;need&lt;/strong&gt; to learn git, if you learnt it earlier good, if not, stop everything you are doing and go learn git right now. There are a lot of tutorials available, just go do it.&lt;/p&gt;
&lt;p&gt;Now the last scary part, do whatever you just did above, but from actual scratch, make a new web app, make a new game, even if it&amp;#39;s silly, do it from scratch, do it yourself. Don&amp;#39;t worry, google and stack overflow will guide you a lot anyways.&lt;/p&gt;
&lt;p&gt;Wow we&amp;#39;re almost done with this well structured but very free-like &lt;em&gt;(we people with ADHD love our freedom)&lt;/em&gt; learning list. You are ready to make applications, but I believe you should learn how things work at a lower level, so at this point I recommend you learn a little bit about &lt;strong&gt;OS and compilers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ironically for my OS class I made a video that teaches what you need to learn to make your own kernel (very basic it&amp;#39;s meant to be to learn the concepts and understand it a little bit better not for you to be able to actually make your own Operating System):&lt;br&gt;&lt;a href=&quot;https://youtu.be/fRuBtt6WC1U&quot;&gt;https://youtu.be/fRuBtt6WC1U&lt;/a&gt; Hope it&amp;#39;s useful.&lt;/p&gt;
&lt;p&gt;And last but not least, Compilers, I do not have a lot of resources for this to be honest so I&amp;#39;m going to let you figure that one out for yourself. &lt;/p&gt;
&lt;h2 id=&quot;what-other-advice-can-you-give-me-&quot;&gt;What other advice can you give me?&lt;/h2&gt;
&lt;p&gt;Well the truth is that as someone with ADHD there are bad days and good days, some days you can&amp;#39;t concentrate on learning anything new and some days you can&amp;#39;t stop learning. Accept it, it&amp;#39;s just the way we work.&lt;br&gt;We have an &lt;em&gt;advantage&lt;/em&gt; here, Computer Science is all about &lt;em&gt;improving and learning constantly&lt;/em&gt; and we are by our very nature very curious people. Once you get over the first hurdle you&amp;#39;ll realize that if you truly enjoy programming you won&amp;#39;t stop wanting to learn new things and that will always give you an edge over the rest.&lt;/p&gt;
&lt;p&gt;The last thing I want to say is, &lt;strong&gt;have fun&lt;/strong&gt;, look for things you are passionate about and do them. It&amp;#39;ll be great, make projects and do things. I cannot stress this enough DO THINGS, I know I know, we suck at finishing things, but &lt;strong&gt;believe me&lt;/strong&gt; even if you have incomplete projects on github, it&amp;#39;s way better than nothing, just make sure you work on improving yourself.&lt;/p&gt;
&lt;p&gt;Finally shutout to &lt;a href=&quot;https://twitter.com/HowtoADHD&quot;&gt;@HowtoADHD&lt;/a&gt; for giving us so many resources to make ADHD work in our favor instead of against us.&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Work</category><category>Software Developing</category><category>Learning</category><category>Programming</category><category>ADHD</category><category>HOWTOADHD</category></item><item><title>Moving to North Carolina</title><link>https://jlvivero.github.io//post/2018/01/moving-to-NC</link><guid>https://jlvivero.github.io//post/2018/01/moving-to-NC</guid><pubDate>Sun, 07 Jan 2018 13:20:15 -0500</pubDate><description>&lt;p&gt;Hello there, It&amp;#39;s been a while since I wrote on my blog, last time we talked I was still in college, studying for interviews and working on small projects.  &lt;/p&gt;
&lt;p&gt;Today I&amp;#39;m in North Carolina, I&amp;#39;m about to start my first job after college as a computer scientist, and I want to talk  about my experience traveling and moving with only a couple thousand dollars to my name and basically nothing else.&lt;/p&gt;
&lt;h2 id=&quot;not-as-easy&quot;&gt;Not as easy&lt;/h2&gt;
&lt;p&gt;Let&amp;#39;s start with the first problem I encountered when moving, it&amp;#39;s something that a lot of people will &lt;strong&gt;NOT&lt;/strong&gt; identify with because it&amp;#39;s really rare this day and age and that is: I have no credit score.   &lt;/p&gt;
&lt;p&gt;Yep you heard me, I have none, it&amp;#39;s not a bad credit score and it&amp;#39;s not a great credit score, it just doesn&amp;#39;t exist.&lt;/p&gt;
&lt;p&gt;Now a lot of people told me: &lt;em&gt;&amp;quot;hey having no credit score is better than having  a bad one&amp;quot;&lt;/em&gt; and well that&amp;#39;s true, but that&amp;#39;s still not helpful, when moving to a different state you are on your own. I traveled all the way from California (I&amp;#39;m from cali if you didn&amp;#39;t know already) to North Carolina, which means I only know a couple of people here and have no backup from my family or close friends.&lt;/p&gt;
&lt;p&gt;That means that If something goes wrong the money I have in my bank is basically all I have, and that&amp;#39;s the problem with not having credit, I cannot pay for rent/food/amenities/ if I don&amp;#39;t well use that money on my bank account.&lt;/p&gt;
&lt;p&gt;Which means I have to be extra careful until I start work (in two days) and until I have enough money on the bank saved up for emergencies.&lt;/p&gt;
&lt;p&gt;So for those people that haven&amp;#39;t built up a credit score, this is my recomendation, build one, it&amp;#39;s not a big deal and you don&amp;#39;t have to be in &amp;quot;debt&amp;quot; that&amp;#39;s something I thought I had to do to build a credit score, but there are simpler ways to build it.   &lt;/p&gt;
&lt;h2 id=&quot;the-good&quot;&gt;The good&lt;/h2&gt;
&lt;p&gt;I won&amp;#39;t get into details because this blog is not about my finances so let&amp;#39;s move on to the nice things about North Carolina. &lt;/p&gt;
&lt;p&gt;First of the snow, damn does snow look so pretty on cities; It really makes everything look cleaner &lt;em&gt;(until it starts melting)&lt;/em&gt;. As someone from cali, I had no idea how nice snow was &lt;em&gt;(but had no idea how cold it got either ;_;)&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;The next thing that&amp;#39;s amazing is getting to meet my longtime friends from North Carolina, I&amp;#39;m so happy to finally meet them in person after playing games together for so long. &lt;/p&gt;
&lt;p&gt;Next my apartment complex, it&amp;#39;s a little pricy for the small apartment I got but it has a lot of amenities that would make my stay impossible had they&amp;#39;ve not been there because of my situation.  &lt;/p&gt;
&lt;p&gt;they have a very beautiful common area, with free wifi and coffee, a gym and a pool &lt;em&gt;(It&amp;#39;s snowing so no  pool available right now)&lt;/em&gt;; but the most important thing about this apartments is that the area looks wholesome and safe, and that takes a weight off me when going to work etc. &lt;/p&gt;
&lt;p&gt;It&amp;#39;s also close to one of my two work locations so that&amp;#39;s great, I will have google fiber which I&amp;#39;m very excited about, unfortunately it won&amp;#39;t be installed until the 21. So that&amp;#39;s two weeks without internet &lt;em&gt;(which is why I am so grateful for the free wifi in the common area of my apartment complex)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I&amp;#39;ll finish this blog saying that it has definitely been an adventure, learning to live by yourself is hard when it&amp;#39;s your first time, and even harder when you have a limited budget until your first paycheck. You can&amp;#39;t just buy everything you know you need, you have to only buy key things. I am very grateful for my friends here in NC that have made my stay easier, and helped me get everything I need from giving me free stuff to driving me around so I can buy the things I need. &lt;/p&gt;
&lt;p&gt;Now that I have a steady job, I think I&amp;#39;ll start writing a little bit more about open source software and games, since that&amp;#39;s what I plan on working on my free time; who knows maybe I&amp;#39;ll even show off a game I make sometime soon.&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Work</category><category>Travelling</category><category>Moving</category><category>North Carolina</category><category>Change</category></item><item><title>Rambling.</title><link>https://jlvivero.github.io//post/2017/10/rambling</link><guid>https://jlvivero.github.io//post/2017/10/rambling</guid><pubDate>Mon, 16 Oct 2017 16:14:55 -0500</pubDate><description>&lt;p&gt;I think there&amp;#39;s beauty in stoicism, to persevere and attempt to achieve your goal no matter how bad things get. Not because you hope that things will turn out well in the end, but because that is what you want to do.   &lt;/p&gt;
&lt;p&gt;No amount of disappointment will ever discourage you from wanting. I believe that that&amp;#39;s where the real value of hard work lies, not expecting things to magically work out, but to work hard for your goal because it&amp;#39;s a goal worth following.  &lt;/p&gt;
&lt;p&gt;Even if it never happens, that&amp;#39;s just what you want to do, so you pursue it, regardless of hope or lack of it, but just a deep drive that keeps you going towards your goal.&lt;/p&gt;
&lt;p&gt;I think I really needed to ramble on for a while now, and I finally made time to do so.&lt;/p&gt;
&lt;p&gt;It&amp;#39;s not the usual type of post I do but It felt right to just write anything this time around.&lt;/p&gt;
&lt;p&gt;As usual I&amp;#39;ll make an attempt to keep this updated more often, and actually write a little bit more about computer science and videogames.&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Motivation</category><category>Philosophy</category><category>Stoicism</category></item><item><title>Staying motivated.</title><link>https://jlvivero.github.io//post/2017/02/staying-motivated</link><guid>https://jlvivero.github.io//post/2017/02/staying-motivated</guid><pubDate>Thu, 16 Feb 2017 17:50:22 -0500</pubDate><description>&lt;p&gt;After finishing my 7th semester of college &lt;em&gt;(in computer science of course, let&amp;#39;s forget those 7 interesting semesters studying civil engineer)&lt;/em&gt;. I found myself having a hard time focusing and improving further, I knew I had a lot of time in my hands but to be honest, I was a little bit burnt out.  &lt;/p&gt;
&lt;p&gt;I studied a lot in very little time for my google interview, and while It did not yield the best results, it took a toll on me. If I could have distributed my time more evenly (maybe not try to cram a lot of knowledge in 1 month) would have been way better.  &lt;/p&gt;
&lt;p&gt;So I decided to take a break, for the first time in a while, no side projects, no tinkering no nothing for my whole winter break. I just relaxed, played games and had fun with friends. It was nice to be honest and &lt;strong&gt;I would recommend everyone to take breaks like that from time to time&lt;/strong&gt;, but once that break was over I needed to stay motivated.  &lt;/p&gt;
&lt;p&gt;I had a problem with that, because I didn&amp;#39;t have any real deadlines, since it is my last semester in college, there&amp;#39;s not many exciting classes like last semester&amp;#39;s compilers class to keep me motivated. &lt;em&gt;(our AI class is really sub par and the only class that&amp;#39;s worth anything is distributed systems)&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;So the first 2 weeks of classes I had a hard time doing much, but that&amp;#39;s fine, school isn&amp;#39;t my problem right now, school is easy. The problem was, getting motivation to study, at a decent pace for job interviews in the future. It&amp;#39;s hard to start before you even get the interviews, but at the same time, as I learnt in my google application experience, you&amp;#39;re already too late to learn everything if you already have a date.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So how did I fix this problem?&lt;/strong&gt; It was something that I never realized I needed so much until I got a message from a friend. &lt;strong&gt;Co-working&lt;/strong&gt;, he had a project due soon from work but he was having a hard time getting the last part of the project done. So he messaged me to get together and work, I wasn&amp;#39;t going to help him on his project, I was gonna work on whatever I wanted or needed. So I worked on learning a new language, maybe do homework, or even just practice algorithms, while he worked on his project. The interesting thing about this, was that If either of us had a problem, we could talk it through, even if I didn&amp;#39;t know anything about the project, I had at least some decent input about how I would approach a problem in general. Even if I was completely off the mark, it helped him see things from a different perspective.     &lt;/p&gt;
&lt;p&gt;For me the effects were different, of course it helped that he is a more experienced developer, so I can ask any question and he&amp;#39;ll probably have a decent answer. It was the fact that I was working with a peer that I respected, it pushed me into working and getting motivated to learn more. This is very important for me, because &lt;strong&gt;it made me realize how important it is to be challenged by your peers to not be complacent.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From now on, I will always strive to be surrounded by peers that are as smart or smarter than me; and are more hardworking than me. That way, I can keep my motivation going by striving to be like them or better.&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Motivation</category><category>Co work</category><category>Computer Science</category><category>Improving</category></item><item><title>My experience interviewing with google.</title><link>https://jlvivero.github.io//post/2016/12/my-google-interview</link><guid>https://jlvivero.github.io//post/2016/12/my-google-interview</guid><pubDate>Thu, 01 Dec 2016 16:50:27 -0500</pubDate><description>&lt;p&gt;So I recently had an interview with &lt;em&gt;google&lt;/em&gt;, and unfortunately I didn&amp;#39;t get the job, but I&amp;#39;m gonna talk a little bit about my experience with the whole process, how I felt going through with it and what I learnt from it.&lt;/p&gt;
&lt;p&gt;Now to make it clear, while I did not sign an NDA, &lt;strong&gt;I did agree to not disclose any interview problem&lt;/strong&gt;, so at most I&amp;#39;ll mention what the problem was vaguely about. Regardless I won&amp;#39;t focus on the problems themselves but on the buildup to me taking the interview and my state of mind when taking the interview.&lt;/p&gt;
&lt;p&gt;I&amp;#39;m here to just tell my story and hopefully anyone who reads from this can learn something from this&lt;/p&gt;
&lt;h2 id=&quot;how-i-got-my-interview&quot;&gt;How I got my interview&lt;/h2&gt;
&lt;p&gt;We&amp;#39;ll start a year ago when I first applied to &lt;em&gt;google&lt;/em&gt;, I wasn&amp;#39;t really planning on applying but someone really close to me wanted to apply even though we both knew we probably wouldn&amp;#39;t get a call back, this was for an internship (I am still going to school). We both applied and never got any callback, and we figured that was the end of it. Fast forward at the start of the semester, I get an email from &lt;em&gt;google&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;It was an email asking for my updated resume, cause they felt that even though I didn&amp;#39;t make the cut for the internship, maybe if I had done more things I&amp;#39;d be good for a full time position. So I sent my resume along with my school transcripts and after a few days I got another email.&lt;/p&gt;
&lt;p&gt;I got another email saying they liked my resume, and that they would like to schedule a simple phone screen where they could talk to me and get to know me, and tell me how the application process was gonna work. So we schedule the interview for a day and that was when it hit me...&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;Holy shit, I am not ready for an interview at all, I have not done any algorithms or data structures in 2 years&amp;quot;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;#39;t think I&amp;#39;m a bad programmer to be honest, but interviews in high end companies require you to know how to write code that scales. Which is the one thing that you actually don&amp;#39;t get much practice off doing school work, or even working on small projects for small companies.&lt;/p&gt;
&lt;p&gt;That means that so far, I&amp;#39;ve been good at solving problems in the most archaic way possible.&lt;/p&gt;
&lt;h2 id=&quot;the-phone-screen&quot;&gt;The phone screen&lt;/h2&gt;
&lt;p&gt;Then comes the phone screen and it&amp;#39;s one of the most pleasant conversations I&amp;#39;ve had over the phone ever. The recruiters at &lt;em&gt;google&lt;/em&gt; are the nicest people I&amp;#39;ve met, and they really know how to make you feel comfortable and take the nervousness out of you. The recruiter explained how the process was gonna be and left me a link with a few problems to solve in one week, with a second week grace period.&lt;/p&gt;
&lt;p&gt;Needless to say, I was worried. I started studying as much as I can, fortunately I had some material to study from, since &lt;em&gt;google&lt;/em&gt; gives you a document with a lot of resources, but one week was not enough for me... heck two weeks was not enough for me. I was barely brushing up on what I knew, but it turns out there were a lot of things I did not know at all as well.&lt;/p&gt;
&lt;h2 id=&quot;choking&quot;&gt;Choking&lt;/h2&gt;
&lt;p&gt;The two weeks passed, and I was okay with the things I already knew, things like using stacks, queue, basic things with trees, I was decent for a simple problem, and if things weren&amp;#39;t very complicated I could get through this. But in reality I was very aware that I wasn&amp;#39;t ready for hard problems.&lt;/p&gt;
&lt;p&gt;I first did the test problem that &lt;em&gt;google&lt;/em&gt; let&amp;#39;s you do to practice and it was very easy, and solved it in less than 30 minutes, that made me happy. I thought hey, maybe I can do this, and then I opened the real problems.&lt;/p&gt;
&lt;p&gt;I had one hour to solve two problems; I solved that practice problem in like 15 minutes, so I figured things would be fine.&lt;/p&gt;
&lt;p&gt;I read the first problem and it&amp;#39;s not even that hard, it asks for no time complexity, in fact it specifies that they only care about having a right answer and not how efficient it is. I smile... and start coding immediately, rushing and not thinking the problem through. That was my first big mistake.&lt;/p&gt;
&lt;p&gt;I finish the problem and run it, it&amp;#39;s wrong... the moment that happened I lost it, I lost all composure and start panicking. I do not know why that happened, most of the time I&amp;#39;m composed no matter the time-line, no matter how hard the problem is, I think it&amp;#39;s because the problem was easy that I felt like this. I attempt to hack through the right answer to no avail, and finally I decide to start doing the second problem regardless.&lt;/p&gt;
&lt;p&gt;The second problem was hard, but I figured out how to solve it, I try to do things a little bit more calmly and eventually code up the solution, and it&amp;#39;s wrong again.&lt;/p&gt;
&lt;p&gt;Fuck... I thought I did this one right, but I still failed at it, I only have 20 minutes left and I messed up both problems. Granted this second problem was actually hard and challenging, and my mistake was small (but I couldn&amp;#39;t figure out how to fix it). The real problem was the first problem, holy fuck that thing was a mess.&lt;/p&gt;
&lt;p&gt;I start trying to figure out what the mistake could be for problem one, and I do find one error, and fix it, but the answer was still wrong. At this point the timer is at 5 minutes, and every minute that passes at that point the timer would flash red and make me panic even more.&lt;/p&gt;
&lt;p&gt;Eventually the time ended and I did not fix my mistake. After calming down I realized how easy the problem was and how dumb my mistake was.&lt;/p&gt;
&lt;h2 id=&quot;second-chance&quot;&gt;Second chance&lt;/h2&gt;
&lt;p&gt;I knew I probably failed so I stopped studying and thought: &lt;em&gt;&amp;quot;okay I&amp;#39;ll just try again next year or apply to other companies, but I can&amp;#39;t let this happen again I have to be prepared next time&amp;quot;&lt;/em&gt; Finally I got that dreaded call, my recruiter told me I didn&amp;#39;t make the cut, and it was no surprise to me.&lt;/p&gt;
&lt;p&gt;My recruiter who again was super nice to me, I can&amp;#39;t stress this enough, said that she wanted to recommend me for another position, because she liked my background and thought I had a chance. (I do not know how much of it was true or if it was just to get people hired cause that&amp;#39;s her job, but I&amp;#39;d like to believe the first part)&lt;/p&gt;
&lt;p&gt;So she put me in contact with another recruiter to schedule a phone interview, I got happy and immediately started studying way more. I scheduled the phone interview and set the date.&lt;/p&gt;
&lt;p&gt;This time I was not gonna be unprepared, I was not gonna choke. So I studied, I did mock interviews with a friend (and they went well) and I practiced a lot. Finally interview day came; I was aware of what my weaknesses and my strengths were. I knew that a dynamic programming problem might spell the end of me, but other than that and combinatorial problems I was in a pretty decent shape.&lt;/p&gt;
&lt;h2 id=&quot;the-interview&quot;&gt;The Interview&lt;/h2&gt;
&lt;p&gt;The interview came and unfortunately my headset wasn&amp;#39;t working. So I had to take the interview with the phone on my hand. It wasn&amp;#39;t a big deal, but the real problem was that the sound was really bad. I couldn&amp;#39;t hear the interviewer half the time and he couldn&amp;#39;t hear me the other half.&lt;/p&gt;
&lt;p&gt;That sucked, but I wasn&amp;#39;t nervous, he asked the question, I asked him to clarify some things about the problem. I thought of a few possible solutions, I figured what data structure would help me and I started solving the problem.&lt;/p&gt;
&lt;p&gt;The approach I took was wrong, but he quickly made me realize that by asking a key question. The problem was that if that method was wrong my next best solution wasn&amp;#39;t that efficient. The brute force solution was &lt;strong&gt;O(n^2)&lt;/strong&gt;, my second best solution (which in this case was the best solution that didn&amp;#39;t have a key mistake) was &lt;strong&gt;O(nlogn)&lt;/strong&gt; which was better but there had to be a O(n) solution.&lt;/p&gt;
&lt;p&gt;At that moment I couldn&amp;#39;t think of any solution, I didn&amp;#39;t freeze and continued thinking though, I talked about my thought process but ultimately, I couldn&amp;#39;t find a O(n) solution and I ended up solving it with my &lt;strong&gt;O(nlogn)&lt;/strong&gt; method.&lt;/p&gt;
&lt;h2 id=&quot;the-aftermath&quot;&gt;The aftermath&lt;/h2&gt;
&lt;p&gt;I was sad but not devastated like last time, the interview ended after I asked him a few questions about his job and about the jobs that I could potentially have at &lt;em&gt;google&lt;/em&gt;. I knew I could have done better, but at the moment that was the best I had to offer.&lt;/p&gt;
&lt;p&gt;I eventually solved the problem in O(n) later but I was not angry at not figuring it out at the interview, it was a thing I hadn&amp;#39;t studied, so it wasn&amp;#39;t me being dumb, it was just me outright not knowing the way to solve it that way period.&lt;/p&gt;
&lt;p&gt;That&amp;#39;s acceptable, in a work environment you can learn how to solve it that way and go ahead and do it, and I figured maybe that would be taken into consideration, since I at least solved it the second best way and had a decent thought process in the interview.&lt;/p&gt;
&lt;p&gt;I waited for 3 weeks (I was told I would get an answer one or two weeks after my interview) and finally the call came. I didn&amp;#39;t mind it took longer, I mean thanksgiving was in the middle of that wait, and if they had to actually think if they wanted me or not at least says to me that I wasn&amp;#39;t completely horrible.&lt;/p&gt;
&lt;p&gt;They told me the hiring committee decided not to go with me for the position and that, again the recruiter (this one was a different recruiter), was super nice to me. He told me not to worry too much, that a lot of googlers fail their first application, and that I should not be discouraged. I asked if June (when I graduate) was an appropriate time to apply again.&lt;/p&gt;
&lt;p&gt;He said yes, I thanked him for his time and the great opportunity he gave me and we said goodbye. He sent me an email afterwards thanking me for my time, and giving me a link from &lt;em&gt;google&lt;/em&gt; that has a bunch of resources to practice and develop your skills.&lt;/p&gt;
&lt;p&gt;That was the end of my experience applying for &lt;em&gt;google&lt;/em&gt;. It was challenging it was fun, studying was hard but worth it. Even if I didn&amp;#39;t get the job I learned so much from this experience, and I know I&amp;#39;m a better programmer now than I was before. I plan on applying again when I graduate, and I plan to be ready by then. I will also apply to other companies, and see where I fit in best.&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Google</category><category>Interview</category><category>Computer Science</category><category>Algorithms</category></item><item><title>Thoughts on Mexico City.</title><link>https://jlvivero.github.io//post/2016/09/mexico-city</link><guid>https://jlvivero.github.io//post/2016/09/mexico-city</guid><pubDate>Mon, 19 Sep 2016 13:42:53 -0500</pubDate><description>&lt;p&gt;Last weekend I had my second visit to Mexico city, but I feel like I got to know a lot more about the lifestyle people that live here have. Last time I came here I came for only 2 days, and I stayed at an aunts apartment. The apartment was beautiful, it was in a very nice area, and it was very near where the event I was attending was. So I had very little interaction with people and the culture.  &lt;/p&gt;
&lt;p&gt;This time around however, things have changed, I stayed here for 5 days and 4 nights. I stayed at my dad&amp;#39;s apartment and the event was at the northern part of the city. So that meant I had to get to know a lot more, this time I was going to a wedding so I had 4 days to get to know the city.&lt;/p&gt;
&lt;p&gt;I decided not to go to the parts of the city that the tourists usually go; Instead I went to visit friends at work and went out with them on their usual day, the first thing I noticed is the traffic. The traffic is definitely way worse than in my hometown, but that&amp;#39;s not all, the driving culture is completely different. People are a lot more reckless and less respectful when driving but at the same time they respect road signs a whole lot more.&lt;/p&gt;
&lt;p&gt;From that and seeing my friends and my dad work so many hours like it was a common thing made me realize how stressful this city is for living, nevertheless it has everything, any kind of fun, any kind of food, anything you like to see is there. So it really isn&amp;#39;t that bad of a place.&lt;/p&gt;
&lt;p&gt;While living can be stressful, it is not a bad place to go work for a few years, I wouldn&amp;#39;t want to live there for long, but going to visit has always been fun.&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Wedding</category><category>Travel</category><category>Cities</category></item><item><title>Learning react from scratch.</title><link>https://jlvivero.github.io//post/2016/07/learning-react</link><guid>https://jlvivero.github.io//post/2016/07/learning-react</guid><pubDate>Sat, 30 Jul 2016 16:57:43 -0500</pubDate><description>&lt;p&gt;I recently had to work on a project that involved making a web page from scratch. I&amp;#39;ve made backend projects several times and at least I know enough about making a web server from scratch using nodejs or any other scripting language.  &lt;/p&gt;
&lt;p&gt;As for the front end, I had worked on a web page that was already built, where I just had to fix some javascript bugs and move some html around, but I had never done a page from scratch.&lt;/p&gt;
&lt;p&gt;So I started trying react, and I have to say, at first it was very confusing, I understood the basic concept of dividing the page into parts or components, and while I still don&amp;#39;t understand the inner workings of react (how it actually does it&amp;#39;s updating) I understood that react updated its components so that whenever you change something, it redraws that part completely, making it so that the page is truly dynamic without having to mutate the html.&lt;/p&gt;
&lt;p&gt;Anyway the basic concept was somewhat understood, but using it was still daunting. I figured the first place to try was facebook&amp;#39;s &lt;a href=&quot;https://facebook.github.io/react/docs/tutorial.html&quot;&gt;tutorial&lt;/a&gt;.
I started building my web page finally based on the tutorial, until I came about my first roadblock. How to actually switch components in react based on something that happens somewhere else.&lt;/p&gt;
&lt;p&gt;In my case I had a nav-bar that had 3 buttons and I wanted to make sure the component body changed according to a click on those buttons, but I had no idea how to make the two different components communicate with each other. This is where the facebook tutorial was somewhat lacking, as it explained a case where changing components was dependent on a parent or a child component, mine was a sister component. So that meant that the specific case wasn&amp;#39;t working for me.&lt;/p&gt;
&lt;p&gt;So I searched stackoverflow for a similar problem and fortunately I found some interesting topics. The first one was &lt;a href=&quot;http://stackoverflow.com/questions/34078033/switching-between-components-in-react-js&quot;&gt;this stackoverflow question&lt;/a&gt; it only gave you a small reference on how to switch and once I saw that my mindset changed a little bit. See I was writing components as if it were html mostly, even tho I was writing in jsx, I was thinking like I was writing static html code. So I started tinkering with the buttons, but I was still missing something&lt;/p&gt;
&lt;h3 id=&quot;props&quot;&gt;Props&lt;/h3&gt;
&lt;p&gt;What I was missing was how props really work, and &lt;a href=&quot;http://stackoverflow.com/questions/24147331/react-the-right-way-to-pass-form-element-state-to-sibling-parent-elements&quot;&gt;this Stack overflow thread&lt;/a&gt; helped me understand it correctly, and conveniently for me, it had a pretty similar problem as mine, there were some differences but that was still good enough to send me on my way.&lt;/p&gt;
&lt;p&gt;The important thing was that I started to understand how props work, and I begin to understand how the basic design of a react webpage worked, and I finally started to see react not as a messy overwhelming framework, but as a very elegant solution for programmers to be able to make webpages like you would design any other application.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I leave here all the links that I used to learn react, I hope they&amp;#39;re useful to anyone that needs them:&lt;/em&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/tutorial.html&quot;&gt;https://facebook.github.io/react/docs/tutorial.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/XxVg_s8xAms&quot;&gt;https://youtu.be/XxVg_s8xAms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://scotch.io/tutorials/learning-react-getting-started-and-concepts&quot;&gt;https://scotch.io/tutorials/learning-react-getting-started-and-concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/24147331/react-the-right-way-to-pass-form-element-state-to-sibling-parent-elements&quot;&gt;http://stackoverflow.com/questions/24147331/react-the-right-way-to-pass-form-element-state-to-sibling-parent-elements&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><author>josluivivgar@gmail.com</author><category>programming</category><category>web-dev</category><category>react</category><category>facebook</category></item><item><title>Buying a new rig.</title><link>https://jlvivero.github.io//post/2016/07/buying-a-new-computer</link><guid>https://jlvivero.github.io//post/2016/07/buying-a-new-computer</guid><pubDate>Fri, 08 Jul 2016 14:40:11 -0500</pubDate><description>&lt;p&gt;So after 8 years, I finally decided to buy a new desktop, I&amp;#39;ve been wanting to get around buying one for a while now but due to not having money or a single thing to my name I decided to wait until now.&lt;/p&gt;
&lt;p&gt;The first thing I had to do was inform myself, I hadn&amp;#39;t been up to date with computer parts since well 2008, and even then I have never been super involved in the topic. So the first thing I did was ask friends about it, and I found out there were generally two sides.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;People who want a future proof computer: that means new generation the highest end specs so that your computer takes a long time to be obsolete.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;People who don&amp;#39;t believe future proof exists: that means they always go for the more bang for your buck and try to cut costs, because they know eventually even if you buy the best of the best it will become obsolete  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now I think I&amp;#39;m somewhere in between, mainly because I want to be able to not need a major upgrade in at least a year. The reason behind this is because I&amp;#39;m in my last year of college, and I don&amp;#39;t want to spend a huge amount of money until I graduate from college. This buy has to be able to work out for the remainder of my life in college.  &lt;/p&gt;
&lt;p&gt;Another important thing is that I plan to work on the game industry as a developer, so that means my computer has to be able to run the latest game engines.&lt;/p&gt;
&lt;p&gt;So after collecting the thoughts of some of my friends, I decided to go for a new gen build, focused on having a really good processor.&lt;/p&gt;
&lt;p&gt;Now, because of the fact that I&amp;#39;m going for new gen that means that some parts are gonna be costly even if they&amp;#39;re the cheaper alternatives, my initial budget was of 1k, and I was willing to go over the budget because I&amp;#39;m not buying the whole thing at once. The current end result is this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Intel Core i7-6700K 4.0GHz Quad-Core Processor: This is the bread and butter of my computer, what the main focus is, an i7 that&amp;#39;s overclockeable, currently going at 345.88$, it is the priciest part of my future rig&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cooler Master Hyper 212 EVO 82.9 CFM Sleeve Bearing CPU Cooler: Since I&amp;#39;m gonna overclock my processor I need to be sure that i have some extra cooling for my rig so I just picked one that had good reviews and was affordable, currently going at 29.49$  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Asus Z170-A ATX LGA1151 Motherboard: I&amp;#39;ll be honest, motherboards is the topic I have the least knowledge about, I had another motherboard picked up, and my friend told me it was a waste of money, it had too many things I would never use, and since I know nothing about motherboards I listened, again I picked one that had good reviews and was the most affordable, making sure it was a new gen motherboard.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;G.Skill Ripjaws V Series 16GB (2 x 8GB) DDR4-2133 Memory: I asked around and nobody seemed to pay much attention to what ram i used as long as it had enough space, and was DDR4, so nothing notable about this.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Samsung 850 EVO-Series 500GB 2.5&amp;quot; Solid State drive: Another problem I ran into is finding a good SSD drive that had high capacity and was affordable, Initially I didn&amp;#39;t plan on spending much money on an SSD since I still have a perfectly functional hardware for data on my current computer. But now I&amp;#39;m considering selling my current rig (once I figure out how much it&amp;#39;s worth) and maybe later on buy another SSD.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NZXT S340(Black) ATX Mid Tower Case: Nothing much to say about this except, I bought the cheapest once that looked okay and could have enough space for the rest of my parts, currently at 62.99$  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;EVGA SuperNOVA NEX 650W 80+ Gold Certified Fully-Modular ATX Power Supply: I was told to go Gold Certified and that other than that pick the cheapest choice. I&amp;#39;m still debating between a 600-650W or sticking with the 750W. The price difference isn&amp;#39;t that much, but I&amp;#39;m already slightly over budget so for now I&amp;#39;ll stick to the 650W&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For video card, I still haven&amp;#39;t decided yet, I&amp;#39;m most likely buying a RX 480 or a 1060 depending on the benchmarks that come out once the 1060 comes out.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today I&amp;#39;m buying the first parts of my new computer which will be the SSD, I can put it on my old rig while I get the rest of the parts so it&amp;#39;s the best choice.&lt;/p&gt;
&lt;p&gt;That&amp;#39;s all for today, this is my first time blogging, so I hope the read wasn&amp;#39;t obnoxious. I&amp;#39;ll probably try and keep it slightly shorter next time&lt;/p&gt;
&lt;p&gt;You can find the link to my future rig &lt;a href=&quot;http://pcpartpicker.com/list/Y36XPs&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Computers</category><category>Hardware</category><category>Shopping</category></item><item><title>Hello World.</title><link>https://jlvivero.github.io//post/2016/07/hello-world</link><guid>https://jlvivero.github.io//post/2016/07/hello-world</guid><pubDate>Thu, 07 Jul 2016 01:18:49 -0500</pubDate><description>&lt;p&gt;Hello world, this is my first blog post, although this is not meant to be read by many yet. This post will serve me as a template to exemplify all the things I can do.
I can link stuff &lt;a href=&quot;http://google.com&quot;&gt;like google&lt;/a&gt;. I can also highlight something like so &lt;code&gt;blog.noraesae.net&lt;/code&gt; &amp;lt;- btw this is the link of the amazing person that I learnt how to use DocPad from, and as you can see, at least for now, my layout will be pretty similar if not the same. (I&amp;#39;ll try to change the theme as I learn sorry for the balant copy paste :( ill try to give you as much credit as possible).&lt;/p&gt;
&lt;h2 id=&quot;look-at-this-other-thing-i-can-do&quot;&gt;Look at this other thing I can do&lt;/h2&gt;
&lt;p&gt;Yep I can use headers as well, this is part of the &lt;code&gt;template&lt;/code&gt; I&amp;#39;m making for myself, it&amp;#39;s weird because to highlight I need the upside down &amp;#39;&amp;#39;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-shell&quot;&gt;$ sudo shell commands go here
$ sudo apt-get amazing
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I can do more than just shell commands I can use the code to enumerate stuff as well.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Like so
  1.    yay
  2.    yay
  3.    yay
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;italic works like this&lt;/em&gt;  &lt;strong&gt;this is bold&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I can also make it so that when something I write in &amp;quot;code&amp;quot; is really long it will have a slider, and it does it automatically.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is not all, I can also specify which language I want to use&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-shell&quot;&gt;$ docpad install jade
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;lang-jade&quot;&gt;// index.html.jade
doctype html
html
  head
    meta(charset=&amp;#39;UTF-8&amp;#39;)
    title My Blog
  body
    h1 My Blog
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;lang-JavaScript&quot;&gt;  var iCan = &amp;quot;even do this&amp;quot;
  var modifycss = function(){
    console.log(&amp;quot;I can probably even change colors of the code if i modify css&amp;quot;);
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Useful link for all this:
&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;that-s-all-folks&quot;&gt;That&amp;#39;s all folks&lt;/h2&gt;
&lt;p&gt;My first Blog is probably not what anyone would expect, but It&amp;#39;s gonna be useful as a template, I&amp;#39;ll probably deprecate this post pretty fast anyway&lt;/p&gt;
</description><author>josluivivgar@gmail.com</author><category>Notice</category></item></channel></rss>